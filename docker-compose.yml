version: '3'
services:
    nginx:
        image: nginx
        container_name: project-nginx
        ports:
            - "8080:80"
        volumes:
            - ./project:/app
            - ./project/docker/nginx/conf.d:/etc/nginx/conf.d
            - ./project/docker/nginx/logs:/var/log/nginx/
        depends_on:
            - project-php-fpm
    project-php-fpm:
        build:
            context: project/docker
            dockerfile: php-fpm.Dockerfile
            args:
                DOCKER_PHP_VERSION: "8.2"
        container_name: project-php-fpm
        volumes:
            - ./project:/app
        depends_on:
            - project-postgres
            - project-redis
            - project-rabbitmq
        extra_hosts:
            - "demo.loc:127.0.0.1"
    project-php-cli:
        build:
            context: project/docker
            dockerfile: php-cli.Dockerfile
            args:
                DOCKER_PHP_VERSION: "8.2"
        container_name: project-php-cli
        volumes:
            - ./project:/app
            - composer:/root/.composer/cache
        depends_on:
            - project-postgres
            - project-redis
            - project-rabbitmq
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && php bin/console messenger:consume async -vv"
    project-queue-worker:
        build:
            context: project/docker
            dockerfile: php-cli.Dockerfile
            args:
                DOCKER_PHP_VERSION: "8.2"
        container_name: project-queue-worker
        volumes:
            - ./project:/app
            - composer:/root/.composer/cache
        depends_on:
            - project-postgres
            - project-redis
            - project-rabbitmq
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && php bin/console messenger:consume async -vv"
    project-postgres:
        image: postgres:11.2-alpine
        container_name: project-postgres
        volumes:
            - project-postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: app
        ports:
            - "5432:5432"
    project-redis:
        image: redis:5.0-alpine
        container_name: project-redis
        volumes:
            - project-redis:/data
        ports:
            - "6379:6379"
    project-rabbitmq:
        image: rabbitmq:3.8-alpine
        container_name: project-rabbitmq
        ports:
            - "5672:5672" # порт для AMQP
            - "15672:15672" # порт для управления RabbitMQ
volumes:
    project-postgres:
    project-redis:
    project-rabbitmq:
    composer:
